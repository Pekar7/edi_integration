server.port=8085
spring.datasource.url=jdbc:postgresql://localhost:5432/edi_demodb
spring.datasource.username=postgres
spring.datasource.password=20012003
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
project.profile.conditional=dev

# Дополнительные настройки для Hibernate
project.db.driver-class-name=org.postgresql.Driver
project.db.password=20012003
project.db.url=jdbc:postgresql://localhost:5432/edi_demodb
project.db.username=postgres

project.hibernate.bytecode.use_reflection_optimizer=false
project.hibernate.default_schema=edi_reg
project.hibernate.format_sql=true
project.hibernate.generate_statistics=false
project.hibernate.id.new_generator_mappings=false
project.hibernate.jdbc.lob.non_contextual_creation=true
project.hibernate.search.autoregister_listeners=false
project.hibernate.show_sql=false
project.hibernate.use_sql=true
project.hikari.connectionTimeout=30000
project.hikari.idleTimeout=30000
project.hikari.maximumPoolSize=20
project.hikari.maxLifetime=2000000
project.hikari.minimumIdle=5
project.hikari.poolName=EdiIntInDataBack_Pool
project.hikari.testQuery=SELECT 1

#Kafka
project.kafka.client.id=clientEdiIntInDataBack
project.kafka.replication.factor=1
project.kafka.server=localhost:9092
project.kafka.consumer.id=consumerEdiIntInDataBack
project.kafka.consumer.group.id=groupEdiIntInDataBack

#Kafka queue name IN
project.kafka.module.topic.edifact.adapted.encrypt=edi.intIn.adapted.encrypt
project.kafka.module.topic.edifact.adapted.crypt=edi.intIn.adapted.crypt

#Kafka queue name OUT
project.kafka.topic.module.intIn.out.xml=edi.intIn.convert.xml
project.kafka.topic.module.intIn.out.edifact=edi.intIn.convert.edifact

#Eureka
spring.application.name=intIn
eureka.client.service-url.defaultZone=http://localhost:8082/eureka
logging.level.com.netflix.eureka=OFF
logging.level.com.netflix.discovery=OFF
eureka.instance.prefer-ip-address=true